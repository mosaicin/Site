// –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Ç—Ä–∏—Å–∞, —Å—Ç—Ä–æ—è—â–µ–≥–æ –ø–∏—Ä–∞–º–∏–¥—É
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Ç—Ä–∏—Å–∞
    let tetrisBlocks = 0;
    const maxTetrisBlocks = 50; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–∏—Ä–∞–º–∏–¥—ã
    let tetrisInterval = null;
    let score = 0;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Ç—Ä–∏—Å–∞
    function initTetris() {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–µ—Ç—Ä–∏—Å–∞
        const tetrisContainer = document.getElementById('tetris-container');
        if (!tetrisContainer) return;
        
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const existingBlocks = tetrisContainer.querySelectorAll('.tetris-block');
        existingBlocks.forEach(block => block.remove());
        
        // –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –¥–ª—è —Ç–µ—Ç—Ä–∏—Å–∞, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
        let tetrisGrid = tetrisContainer.querySelector('.tetris-grid');
        if (!tetrisGrid) {
            tetrisGrid = document.createElement('div');
            tetrisGrid.className = 'tetris-grid';
            tetrisContainer.appendChild(tetrisGrid);
        }
        
        // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É
        tetrisGrid.innerHTML = '';
        
        // –°–æ–∑–¥–∞–µ–º —è—á–µ–π–∫–∏ —Å–µ—Ç–∫–∏
        for (let row = 0; row < 10; row++) {
            for (let col = 0; col < 10; col++) {
                const cell = document.createElement('div');
                cell.className = 'tetris-grid-cell';
                cell.setAttribute('data-row', row);
                cell.setAttribute('data-col', col);
                tetrisGrid.appendChild(cell);
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç—É—Ä –ø–∏—Ä–∞–º–∏–¥—ã, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç
        let pyramidOutline = tetrisContainer.querySelector('.pyramid-outline');
        if (!pyramidOutline) {
            pyramidOutline = document.createElement('div');
            pyramidOutline.className = 'pyramid-outline';
            tetrisContainer.appendChild(pyramidOutline);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–µ—Ç—Ä–∏—Å–∞
        let tetrisStatus = tetrisContainer.querySelector('.tetris-status');
        if (!tetrisStatus) {
            tetrisStatus = document.createElement('div');
            tetrisStatus.className = 'tetris-status';
            tetrisContainer.appendChild(tetrisStatus);
        }
        tetrisStatus.textContent = '–ù–∞–±–∏—Ä–∞–π—Ç–µ –æ—á–∫–∏, —á—Ç–æ–±—ã —Å—Ç—Ä–æ–∏—Ç—å –ø–∏—Ä–∞–º–∏–¥—É!';
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –±–ª–æ–∫–æ–≤
        tetrisBlocks = 0;
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        startDemoTetris();
    }
    
    // –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ —Ç–µ—Ç—Ä–∏—Å–∞
    function startDemoTetris() {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
        if (tetrisInterval) {
            clearInterval(tetrisInterval);
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤
        tetrisInterval = setInterval(() => {
            // –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫, –µ—Å–ª–∏ –ø–∏—Ä–∞–º–∏–¥–∞ –µ—â—ë –Ω–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞
            if (tetrisBlocks < maxTetrisBlocks) {
                addTetrisBlock();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                updateTetrisStatus();
            } else {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –ø–∏—Ä–∞–º–∏–¥–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞
                clearInterval(tetrisInterval);
                
                // –ü—Ä–∞–∑–¥–Ω—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–∏—Ä–∞–º–∏–¥—ã
                celebratePyramidCompletion();
            }
        }, 2000); // –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞ —Ç–µ—Ç—Ä–∏—Å–∞
    function addTetrisBlock() {
        if (tetrisBlocks >= maxTetrisBlocks) {
            return; // –ü–∏—Ä–∞–º–∏–¥–∞ —É–∂–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞
        }
        
        tetrisBlocks++;
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–µ—Ç—Ä–∏—Å–∞
        const tetrisContainer = document.getElementById('tetris-container');
        if (!tetrisContainer) return;
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±–ª–æ–∫
        const block = document.createElement('div');
        block.className = 'tetris-block';
        block.setAttribute('data-index', tetrisBlocks);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –±–ª–æ–∫–∞ –≤ –ø–∏—Ä–∞–º–∏–¥–µ
        const position = calculateBlockPosition(tetrisBlocks);
        block.style.left = `${position.x}px`;
        block.style.top = `${position.y}px`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –µ–≥–∏–ø–µ—Ç—Å–∫–∏–π —Å–∏–º–≤–æ–ª –Ω–∞ –±–ª–æ–∫
        const symbols = ['‚ò•', 'ìÇÄ', 'ìÉÄ', 'ìÜ£', 'ìáØ', 'ìäñ', 'ìÖì', 'ìÜì', 'ìèè', 'ìäΩ'];
        block.textContent = symbols[Math.floor(Math.random() * symbols.length)];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        tetrisContainer.appendChild(block);
        
        // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–∞–¥–µ–Ω–∏–µ –±–ª–æ–∫–∞
        animateBlockFall(block, position);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ª–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –ø–∏—Ä–∞–º–∏–¥—ã
        if (tetrisBlocks >= maxTetrisBlocks) {
            celebratePyramidCompletion();
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç
        updateScore(10);
    }
    
    // –†–∞—Å—á–µ—Ç –ø–æ–∑–∏—Ü–∏–∏ –±–ª–æ–∫–∞ –≤ –ø–∏—Ä–∞–º–∏–¥–µ
    function calculateBlockPosition(blockNumber) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–∏—Ä–∞–º–∏–¥—ã
        const baseWidth = 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –≤ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø–∏—Ä–∞–º–∏–¥—ã
        const blockSize = 28; // –†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
        const spacing = 2; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏
        
        // –í—ã—á–∏—Å–ª—è–µ–º, –≤ –∫–∞–∫–æ–º —Ä—è–¥—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–ª–æ–∫
        let row = 0;
        let blocksInPreviousRows = 0;
        
        while (blocksInPreviousRows + (baseWidth - row) < blockNumber) {
            blocksInPreviousRows += (baseWidth - row);
            row++;
        }
        
        // –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –±–ª–æ–∫–∞ –≤ —Ç–µ–∫—É—â–µ–º —Ä—è–¥—É
        const positionInRow = blockNumber - blocksInPreviousRows;
        
        // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        const x = (positionInRow - 1) * (blockSize + spacing) + (row * (blockSize + spacing) / 2);
        const y = row * (blockSize + spacing);
        
        return { x, y };
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è –±–ª–æ–∫–∞
    function animateBlockFall(block, finalPosition) {
        // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è (–Ω–∞–¥ –ø–∏—Ä–∞–º–∏–¥–æ–π)
        block.style.top = '-30px';
        
        // –ê–Ω–∏–º–∏—Ä—É–µ–º –ø–∞–¥–µ–Ω–∏–µ
        setTimeout(() => {
            block.style.transition = 'top 0.5s ease-in';
            block.style.top = `${finalPosition.y}px`;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –ø–∞–¥–µ–Ω–∏—è
            playBlockSound();
        }, 50);
    }
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ –ø–∞–¥–µ–Ω–∏—è –±–ª–æ–∫–∞
    function playBlockSound() {
        // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ-—ç–ª–µ–º–µ–Ω—Ç
        const audio = new Audio();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∑–≤—É–∫ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        const sounds = [
            'data:audio/wav;base64,UklGRjIAAABXQVZFZm10IBIAAAABAAEAQB8AAEAfAAABAAgAAABMYXZmNTguMTMuMTAw',
            'data:audio/wav;base64,UklGRjIAAABXQVZFZm10IBIAAAABAAEAQB8AAEAfAAABAAgAAABMYXZmNTguMTMuMTAw'
        ];
        audio.src = sounds[Math.floor(Math.random() * sounds.length)];
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
        audio.volume = 0.2;
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
        audio.play().catch(e => {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –±–ª–æ–∫–∏—Ä—É—é—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ)
            console.log('–ó–≤—É–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±—Ä–∞—É–∑–µ—Ä–æ–º:', e);
        });
    }
    
    // –ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∏—Ä–∞–º–∏–¥—ã
    function celebratePyramidCompletion() {
        // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏—è
        const celebration = document.createElement('div');
        celebration.className = 'celebration';
        celebration.textContent = '–ü–∏—Ä–∞–º–∏–¥–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞!';
        document.body.appendChild(celebration);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫
        createFireworks();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–µ—Ç—Ä–∏—Å–∞
        updateTetrisStatus('–ü–∏—Ä–∞–º–∏–¥–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!');
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            celebration.remove();
        }, 5000);
    }
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∞
    function createFireworks() {
        for (let i = 0; i < 20; i++) {
            setTimeout(() => {
                const firework = document.createElement('div');
                firework.className = 'firework';
                
                // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
                const x = Math.random() * window.innerWidth;
                const y = Math.random() * window.innerHeight / 2;
                
                firework.style.left = `${x}px`;
                firework.style.top = `${y}px`;
                
                // –°–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç
                const colors = ['#FF4500', '#FFD700', '#00BFFF', '#32CD32', '#FF69B4'];
                firework.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                
                document.body.appendChild(firework);
                
                // –£–¥–∞–ª—è–µ–º —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫ —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è
                setTimeout(() => {
                    firework.remove();
                }, 1000 + Math.random() * 3000);
            }, i * 200); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ç–µ—Ç—Ä–∏—Å–∞
    function updateTetrisStatus(customText) {
        const tetrisContainer = document.getElementById('tetris-container');
        if (!tetrisContainer) return;
        
        const tetrisStatus = tetrisContainer.querySelector('.tetris-status');
        if (!tetrisStatus) return;
        
        if (customText) {
            tetrisStatus.textContent = customText;
        } else {
            const progress = Math.floor((tetrisBlocks / maxTetrisBlocks) * 100);
            tetrisStatus.textContent = `–ü–æ—Å—Ç—Ä–æ–µ–Ω–æ: ${progress}% (${tetrisBlocks}/${maxTetrisBlocks} –±–ª–æ–∫–æ–≤)`;
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞
    function updateScore(points) {
        score += points;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞
        const scoreValue = document.getElementById('score-value');
        if (scoreValue) {
            scoreValue.textContent = score;
        }
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ—á–∫–æ–≤
        const scoreAnimation = document.createElement('div');
        scoreAnimation.className = 'score-animation';
        scoreAnimation.textContent = `+${points}`;
        
        const scoreContainer = document.getElementById('score-container');
        if (scoreContainer) {
            scoreContainer.appendChild(scoreAnimation);
            
            // –£–¥–∞–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
            setTimeout(() => {
                scoreAnimation.remove();
            }, 1000);
        }
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∞ —Ç–µ—Ç—Ä–∏—Å–∞ –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ –æ—á–∫–æ–≤
    window.addTetrisBlockOnScore = function() {
        addTetrisBlock();
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Ç—Ä–∏—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    initTetris();
});
